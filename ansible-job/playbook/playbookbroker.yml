---
  - hosts:
      #- all
      - tag_Environment_project
    become: yes
    tasks:
      - name: ansible create working directory
        file:
          path: "{{ item }}"
          state: directory
          mode: '0755'
        with_items: '{{ createfolder }}'

      - name: Install needed software
        yum:
          name: "{{ item }}"
          state: present
        with_items: '{{ neededapps }}'

      - name: Download kafka zipped file
        get_url:
          url: "{{ kafkafolder }}"
          dest: "{{ projectfolder }}"
          mode: '0440'
          owner: ansible

      - name: untar kafka file 1
        ansible.builtin.shell:  tar -xf kafka-3.0.0-src.tgz
        args:
          chdir: "{{ projectfolder }}" 

      - name: Write welcome message profile.d file
        ansible.builtin.template:
          src: welcome_message.j2
          dest: /etc/profile.d/welcome_message.sh
          owner: ansible
          group: ansible
          mode: '0644'

  

  - hosts:
    #  - broker
      - tag_Name_broker_kafka_server
    become: yes
    tasks:
      - name: Write producer code to producer node
        ansible.builtin.template:
          src: producer_message.j2
    #     dest: /home/ec2-user/project/pythoncode/producer_message.py
          dest: project/pythoncode/producer_message.py
          owner: ansible
          group: ansible
          mode: '0644'

      - name: Write consumer code to consumer node
        ansible.builtin.template:
          src: consumer_message.j2
        # dest: /home/ec2-user/project/pythoncode/consumer_message.py
          dest: project/pythoncode/consumer_message.py
          owner: ansible
          group: ansible
          mode: '0644'

      - name: Install kafka python package on kafka broker node
        pip:
          name: kafka-python

    # - name: Ensure the kafka memory settings are exactly as needed
       #ansible.builtin.lineinfile:
        # path: /home/ec2-user/project/kafka_2.13-2.8.0/bin/kafka-server-start.sh
        # path: project/kafka_2.13-2.8.0/bin/kafka-server-start.sh
        # regexp: 'export KAFKA_HEAP_OPTS="-Xmx1G -Xms1G"'
        # line: 'export KAFKA_HEAP_OPTS="-Xmx512M -Xms512M"'
        # backrefs: yes

      - name: Setup broker to connect to zookeeper using zookeeper.connect
        ansible.builtin.lineinfile:
          path: project/kafka-3.0.0-src/config/server.properties
          regexp: 'zookeeper.connect=localhost:2181'
          line: 'zookeeper.connect=tag_Name_zookeeper_kafka_server:2181'
          backrefs: yes

#      - name: change working directory to kafka folder then start zookeeper engine
#        ansible.builtin.shell:
#          cmd: bin/kafka-server-start.sh config/kafka.properties
#          chdir: /home/ec2-user/project/kafka_2.13-2.8.0/

#- hosts:
  #    - zookeeper
  #  become: yes
  #  tasks:
  #    - name: change working directory to kafka folder then start zookeeper engine
  #      ansible.builtin.shell:
  #        cmd: bin/zookeeper-server-start.sh config/zookeeper.properties
  #        chdir: /home/ec2-user/project/kafka_2.13-2.8.0/

  - hosts:
    #  - broker
      - tag_Name_zookeeper_kafka_server
    become: yes
    tasks:
      #- name: build container image
      #  docker_image:
       #   name: testrun:v1.0
        #  build:
         #   path: /root/project/code
          #  source: build
        #state: present
      
      - name: Clone a repo with separate git directory
        ansible.builtin.git:
          repo: https://github.com/olaniyikolawole744/devops-penultimante-project.git
          dest: /root/project
          separate_git_dir: /root/projectbakup2
      

      - name: Build image and with buildargs
        docker_image:
          path: /root/project/code
          name: myimage
          buildargs:
            log_volume: /var/log/myapp
            listen_port: 8080

      #- name: Tag and push to docker hub
       # community.docker.docker_image:
        #  name: myimage
         # repository: olaniyikolawole/myimage:latest
          #push: yes
          #source: local

      - name: Log into DockerHub
        docker_login:
          registry_url: https://hub.docker.com/
          username: olaniyikolawole744
          password: "{{ dockerhubpass }}"
          reauthorize: yes

      - name: Tag and push to docker hub
        docker_image:
          name: myimage
          repository: olaniyikolawole/dir-dev
          tag: latest
          push: yes
          client_key: 

      
